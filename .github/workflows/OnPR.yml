name: Run PR
run-name: Run PR by ${{github.actor}}
on:
  pull_request:
    types: [opened,reopened,edited,synchronize]
    branches: [ "main" ]
    paths:
      - '**'
  workflow_dispatch:
jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.1'
      - name: Install node modules
        run: npm ci
      - name: Run basic jest tests
        run: npm run test:jest

  Create-Android-Build:

    runs-on: ubuntu-latest
    needs: Test
    outputs:
      file_id: ${{ steps.upload_step.outputs.file_id }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.1'
      - name: Install node modules
        run: npm ci     
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      - name: Prepare to build
        run: npm run prebuild:clean:silent

      - name: Build Android release
        run: npm run android:release


      - name: RUN Python
        id: upload_step
        env:
          SERVICE_ACCOUNT_BASE64: ${{ secrets.G_ACCOUNT_SECRET }}
        run: |
          python3 -m venv virtuaP
          source virtuaP/bin/activate
          python3 -m pip install --upgrade pip
          pip install google-api-python-client
          FILE_ID=$(python3 .github/scripts/drive.py upload "./android/app/build/outputs/apk/release/app-release.apk"|egrep -o "[a-zA-Z0-9_-]*$")
          echo "file_id=$FILE_ID" >> $GITHUB_ENV
          echo "::set-output name=file_id::$FILE_ID"

  Create-iOS-Build:
    runs-on: macos-latest
    outputs:
      file_id: ${{ steps.upload_step.outputs.file_id }}
    needs: Test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.1'
      - name: Install node modules
        run: npm ci
      - name: Prepare 
        run: npm run prebuild:clean:silent
      - name: Prepare ios build
        run: npm run ios:release
      - name: zip app
        run: zip -r ./app-release.zip ./ios/out/Build/Products/Release-iphonesimulator/StudioApp.app

      - name: RUN Python
        id: upload_step
        env:
          SERVICE_ACCOUNT_BASE64: ${{ secrets.G_ACCOUNT_SECRET }}
        run: |
          python3 -m venv virtuaP
          source virtuaP/bin/activate
          python3 -m pip install --upgrade pip
          pip install google-api-python-client
          FILE_ID=$(python3 .github/scripts/drive.py upload "./app-release.zip"|egrep -o "[a-zA-Z0-9_-]*$")
          echo "file_id=$FILE_ID" >> $GITHUB_ENV
          echo "::set-output name=file_id::$FILE_ID"


  Test-Android-Build:
    runs-on: self-hosted
    needs: Create-Android-Build
    steps:
      - uses: actions/checkout@v4

      - name: RUN Python
        env:
          SERVICE_ACCOUNT_BASE64: ${{ secrets.G_ACCOUNT_SECRET }}
        run: |
          python3 -m venv virtuaP
          source virtuaP/bin/activate
          python3 -m pip install --upgrade pip
          pip install google-api-python-client
          FILE_ID=${{ needs.Create-Android-Build.outputs.file_id }}
          python3 .github/scripts/drive.py download $FILE_ID "./android/app/build/outputs/apk/release/app-release.apk"


             
      - name: Install app in simulator
        run: npm run emu:android:install:ReleaseApp
      - name: Run Maestro
        run: npm run test:maestro:android

  Test-iOS-Build:
    runs-on: self-hosted
    needs: Create-iOS-Build
    steps:
      - uses: actions/checkout@v4

#      - name: Start Sim
#        run: npm run emu:ios:start 
      - run: |
            #!/bin/bash

            BOOTED_DEVICES=$(xcrun simctl list devices booted | grep "Booted")

            if [[ -z "$BOOTED_DEVICES" ]]; then
                echo "None runing, starting one"
                
                
                DEVICE_ID=$(xcrun simctl list devices | grep -m 1 "(Shutdown)" | awk -F '[()]' '{print $2}')
                
                if [[ -n "$DEVICE_ID" ]]; then
                    xcrun simctl boot "$DEVICE_ID"
                    echo "Simulador con ID $DEVICE_ID arrancado."
                else
                    echo "None able to boot."
                fi
            else
                echo "There is one booted."
            fi

      - name: RUN Python
        env:
          SERVICE_ACCOUNT_BASE64: ${{ secrets.G_ACCOUNT_SECRET }}
        run: |
          python3 -m venv virtuaP
          source virtuaP/bin/activate
          python3 -m pip install --upgrade pip
          pip install google-api-python-client
          FILE_ID=${{ needs.Create-iOS-Build.outputs.file_id }}
          python3 .github/scripts/drive.py download $FILE_ID "./app-release.zip"
      - name: Unzip app
        run: unzip -o ./app-release.zip

              
      - name: Install app in simulator
        run: npm run emu:ios:install:ReleaseApp
      - name: Run Maestro
        env:
          MAESTRO_DRIVER_STARTUP_TIMEOUT : 600000
        run: npm run test:maestro:ios
      
#      - run: npm run emu:ios:stop
#        if: always()